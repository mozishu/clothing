<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amy.clothing.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.amy.clothing.pojo.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="gid" property="gid" jdbcType="INTEGER" />
    <result column="customer" property="customer" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="isReserve" property="isreserve" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="oweMoney" property="owemoney" jdbcType="DECIMAL" />
    <result column="priceDate" property="pricedate" jdbcType="TIMESTAMP" />
    <result column="transactionDate" property="transactiondate" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="cretaetime" property="cretaetime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, gid, customer, mobile, num, isReserve, price, oweMoney, priceDate, transactionDate,
    deleted, cretaetime, updatetime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.amy.clothing.pojo.Order" >
    insert into order (id, gid, customer,
      mobile, num, isReserve, 
      price, oweMoney, priceDate, 
      transactionDate, deleted, cretaetime, 
      updatetime)
    values (#{id,jdbcType=INTEGER}, #{gid,jdbcType=INTEGER}, #{customer,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{isreserve,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{owemoney,jdbcType=DECIMAL}, #{pricedate,jdbcType=TIMESTAMP}, 
      #{transactiondate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}, #{cretaetime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.amy.clothing.pojo.Order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gid != null" >
        gid,
      </if>
      <if test="customer != null" >
        customer,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="isreserve != null" >
        isReserve,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="owemoney != null" >
        oweMoney,
      </if>
      <if test="pricedate != null" >
        priceDate,
      </if>
      <if test="transactiondate != null" >
        transactionDate,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="cretaetime != null" >
        cretaetime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="customer != null" >
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="isreserve != null" >
        #{isreserve,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="owemoney != null" >
        #{owemoney,jdbcType=DECIMAL},
      </if>
      <if test="pricedate != null" >
        #{pricedate,jdbcType=TIMESTAMP},
      </if>
      <if test="transactiondate != null" >
        #{transactiondate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="cretaetime != null" >
        #{cretaetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.amy.clothing.pojo.Order" >
    update order
    <set >
      <if test="gid != null" >
        gid = #{gid,jdbcType=INTEGER},
      </if>
      <if test="customer != null" >
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="isreserve != null" >
        isReserve = #{isreserve,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="owemoney != null" >
        oweMoney = #{owemoney,jdbcType=DECIMAL},
      </if>
      <if test="pricedate != null" >
        priceDate = #{pricedate,jdbcType=TIMESTAMP},
      </if>
      <if test="transactiondate != null" >
        transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="cretaetime != null" >
        cretaetime = #{cretaetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amy.clothing.pojo.Order" >
    update order
    set gid = #{gid,jdbcType=INTEGER},
      customer = #{customer,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      isReserve = #{isreserve,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      oweMoney = #{owemoney,jdbcType=DECIMAL},
      priceDate = #{pricedate,jdbcType=TIMESTAMP},
      transactionDate = #{transactiondate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      cretaetime = #{cretaetime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>